Linear search has a time complexity of O(n).,TRUE,4
Binary search trees can have more than two children for each node.,FALSE,8
Stacks follow the Last In First Out (LIFO) principle.,TRUE,4
Queues follow the Last In First Out (LIFO) principle.,FALSE,10
Hash tables guarantee constant-time lookup for any key.,FALSE,8
Depth-first search always finds the shortest path in a weighted graph.,FALSE,10
Dijkstra's algorithm guarantees finding the shortest path in a graph with negative edge weights.,FALSE,8
Priority queues use a First In First Out (FIFO) ordering.,FALSE,4
Merge sort is a comparison-based sorting algorithm.,TRUE,10
Radix sort sorts numbers by processing individual digits.,TRUE,8
Binary trees have at most three children per node.,FALSE,4
Tries are primarily used for sorting integers.,FALSE,10
A red-black tree ensures balance by performing rotations.,TRUE,8
Breadth-first search explores as far as possible along each branch before backtracking.,FALSE,10
Bellman-Ford algorithm can handle graphs with negative edge weights.,TRUE,8
Huffman coding is a lossy compression technique.,FALSE,4
Topological sorting can be applied to graphs with cycles.,FALSE,10
Fenwick trees require O(n log n) time for construction.,FALSE,8
A suffix tree is used for finding all occurrences of a pattern in a string.,TRUE,4
Binary heaps are commonly used to implement priority queues.,TRUE,10
A graph can only be represented using adjacency matrices.,FALSE,8
Quick sort is a stable sorting algorithm.,FALSE,4
Trie is efficient for searching prefixes of words.,TRUE,8
Binary search requires the input array to be sorted.,TRUE,4
Dijkstra's algorithm uses a priority queue to select the next vertex to explore.,TRUE,10
Floyd-Warshall algorithm finds the shortest paths between all pairs of vertices in a graph.,TRUE,8
Huffman coding guarantees a unique prefix-free code for each input character.,TRUE,4
A tree is a connected graph with no cycles.,TRUE,8
Depth-first search can be used to find the articulation points of a graph.,TRUE,4
Binary heaps have a space complexity of O(n).,FALSE,10
Radix trees are commonly used for storing strings.,TRUE,8
Breadth-first search can be used to find bridges and articulation points in a graph.,TRUE,4
AVL trees are unbalanced binary search trees.,FALSE,10
Selection sort has a time complexity of O(n^2).,TRUE,8
Prim's algorithm guarantees finding the minimum spanning tree in a graph with non-negative edge weights.,TRUE,10
Binary search trees allow duplicate keys in their structure.,FALSE,4
Graph traversal algorithms can be used to detect cycles in a graph.,TRUE,8
The load factor of a hash table is the ratio of the number of elements to the number of buckets.,TRUE,4
Kruskal's algorithm finds the shortest path in a graph with negative edge weights.,FALSE,10
Breadth-first search always visits all vertices in a graph before backtracking.,FALSE,8
A binary heap is a complete binary tree.,TRUE,4
Huffman coding produces variable-length codes for input characters.,TRUE,10
A graph can have multiple spanning trees.,TRUE,8
Binary search can only be applied to sorted arrays.,TRUE,4
Depth-first search can be implemented iteratively.,TRUE,10
A hash function always produces unique hash values for different inputs.,FALSE,8
Separate chaining resolves collisions by finding an alternative location in the hash table.,TRUE,4
Collision resolution is necessary in hash tables to handle cases where multiple keys hash to the same index.,TRUE,10
The height of a binary tree with n nodes is O(log n).,FALSE,8
Graph traversal algorithms are used to visit all vertices in a graph.,TRUE,4
Linear search is more efficient than binary search for sorted arrays.,FALSE,10
Binary search can be implemented recursively.,TRUE,8
Radix sort is an in-place sorting algorithm.,FALSE,4
Depth-first search can be used to find connected components in a graph.,TRUE,10
Depth-first search can be used to detect cycles in a graph.,TRUE,8
A hash table with separate chaining has a worst-case time complexity of O(n).,FALSE,4
Prim's algorithm uses breadth-first search to find the minimum spanning tree.,FALSE,10
Depth-first search always finds the shortest path between two vertices in a graph.,FALSE,8
A forest is a connected graph with no cycles.,FALSE,4
Radix trees are commonly used for storing integers.,FALSE,10
Breadth-first search can be used to find the diameter of a tree.,TRUE,4
Huffman coding guarantees the shortest possible code length for each character.,TRUE,8
Binary search trees allow traversal in any order.,TRUE,4
Kruskal's algorithm guarantees finding the shortest path in a graph with negative edge weights.,FALSE,10
A hash table with open addressing has a worst-case time complexity of O(n).,FALSE,8
Dijkstra's algorithm uses depth-first search to explore vertices.,FALSE,10
Breadth-first search can be used to find the minimum spanning tree of a graph.,TRUE,8
Huffman coding is a lossless compression technique.,TRUE,4
Topological sorting is only applicable to directed acyclic graphs (DAGs).,TRUE,10
Floyd-Warshall algorithm can handle graphs with negative cycles.,TRUE,8
Binary heaps guarantee constant-time insertion and deletion of elements.,FALSE,4
Binary search trees can be implemented using arrays.,FALSE,10
Kruskal's algorithm can handle graphs with negative edge weights.,TRUE,8
Breadth-first search can be used to find the shortest path in a graph.,FALSE,10
A suffix tree is a compressed trie containing all the suffixes of the given text.,TRUE,8
Huffman coding is optimal for all distributions of characters.,FALSE,4
Binary search trees guarantee O(log n) time complexity for all operations.,FALSE,10
Floyd-Warshall algorithm has a time complexity of O(V^3); where V is the number of vertices.,TRUE,8
Prim's algorithm guarantees finding the shortest path between two vertices in a graph.,FALSE,4
Breadth-first search can be used to detect cycles in a graph.,TRUE,10
A trie is a tree-like data structure used primarily for sorting integers.,FALSE,8
Radix trees are particularly efficient when the keys have long common prefixes.,TRUE,4
A segment tree is a tree data structure used for storing intervals or segments.,TRUE,8
Fenwick trees require O(n log n) time and O(n) space for construction.,FALSE,4
Suffix trees can efficiently answer various string-related queries; such as finding the longest common substring.,TRUE,10
A hash function is a deterministic function that maps input data of arbitrary size to fixed-size values.,TRUE,8
Linear probing resolves collisions by placing the collided element in the next available empty slot in the hash table.,TRUE,4
Double hashing requires that the step size computed by the secondary hash function is relatively prime to the size of the hash table.,TRUE,8
Bloom filters may produce false positives but never produce false negatives.,TRUE,4
In a binary search tree; the right subtree of a node contains only nodes with keys greater than the node's key.,TRUE,10
Heap sort is a stable sorting algorithm.,FALSE,8
Priority queues can be implemented using various data structures; such as arrays; linked lists; binary heaps; or balanced binary search trees.,TRUE,4
Depth-first search can be used to find the shortest path between two vertices in an unweighted graph.,FALSE,10
Kruskal's algorithm is a graph search algorithm that finds the shortest path from a source vertex to all other vertices in a weighted graph with non-negative edge weights.,FALSE,8
Topological sorting is a linear ordering of the vertices of a directed graph such that for every directed edge from vertex u to vertex v; u comes before v in the ordering.,TRUE,10
Floyd-Warshall algorithm is a dynamic programming algorithm used to find the shortest paths between all pairs of vertices in a weighted graph with positive or negative edge weights.,TRUE,4
Ternary search is a divide-and-conquer algorithm used to find the maximum or minimum value of a unimodal function over a given interval.,TRUE,8
Huffman coding ensures that no code is a prefix of another code; making it uniquely decodable.,TRUE,4
Balanced binary search trees; such as AVL trees and Red-Black trees; ensure that the height of the tree remains logarithmic; providing consistent performance.,TRUE,10
A binary search tree always has a height of O(n); where n is the number of elements in the tree.,FALSE,8
Graphs can only represent relationships between objects; they cannot model hierarchical structures.,FALSE,4
Dijkstra's algorithm is an example of a greedy algorithm; as it makes locally optimal choices at each step.,TRUE,10
A breadth-first search traversal of a tree will always visit the nodes in sorted order.,FALSE,8
A priority queue implemented with a binary heap guarantees O(1) time complexity for both insertion and deletion.,FALSE,4
A self-balancing binary search tree; such as AVL tree or Red-Black tree; ensures a worst-case time complexity of O(log n) for search; insert; and delete operations.,TRUE,10
The Floyd-Warshall algorithm can handle graphs with negative cycles.,TRUE,8
Tries are primarily used for sorting integers in non-decreasing order.,FALSE,4
Topological sorting is applicable only to directed graphs without cycles.,TRUE,10
The heapify operation in a binary heap has a time complexity of O(log n); where n is the number of elements in the heap.,TRUE,8
Hash tables use linked lists to handle collisions.,TRUE,4
Breadth-first search can be used to find the shortest path between two vertices in a weighted graph.,FALSE,10
Prim's algorithm guarantees finding the shortest path from a source vertex to all other vertices in a weighted graph.,FALSE,8
A binary search tree allows duplicate keys in its structure.,TRUE,4
Bellman-Ford algorithm has a time complexity of O(V*E); where V is the number of vertices and E is the number of edges in the graph.,TRUE,10
In a directed graph; the in-degree of a vertex represents the number of edges entering the vertex.,TRUE,8
Quick sort is an example of a stable sorting algorithm.,FALSE,4
Fenwick trees are primarily used for range queries and updates in an array.,TRUE,10
A suffix tree can efficiently answer queries about the longest common substring of a set of strings.,TRUE,8
Binary heaps are always complete binary trees.,TRUE,4
A tree with n vertices and n-1 edges is always connected.,TRUE,10
Depth-first search can be used to determine the connectivity of a graph.,TRUE,4
Binary search can be implemented iteratively.,TRUE,8
In a graph; the diameter is the maximum distance between any pair of vertices.,TRUE,4
The worst-case time complexity of quick sort is O(n^2).,FALSE,10
AVL trees require rotations to maintain balance after insertion and deletion operations.,TRUE,8
Huffman coding guarantees the optimal prefix-free code for any set of character frequencies.,TRUE,10
Breadth-first search can be used to check if a graph is bipartite.,TRUE,8
A suffix array is an alternative data structure to suffix trees for storing all the suffixes of a string.,TRUE,4
Graphs can only represent relationships between two objects.,FALSE,10
Binary heaps guarantee O(1) time complexity for both insertion and deletion operations.,FALSE,8
A segment tree is a type of tree data structure used for storing intervals or segments.,TRUE,4
Hash tables always have a fixed size determined at initialization.,FALSE,10
Floyd-Warshall algorithm finds the shortest paths between all pairs of vertices in a graph with positive edge weights.,TRUE,8
Radix sort has a worst-case time complexity of O(n^2).,FALSE,10
A red-black tree is always a balanced binary search tree.,TRUE,8
A trie is a tree-like data structure used primarily for searching strings.,TRUE,4
Binary search trees can be efficiently implemented using arrays.,FALSE,10
Ternary search divides the search space into three parts at each step.,TRUE,8
Dijkstra's algorithm can handle graphs with negative edge weights.,FALSE,4
Huffman coding is an example of a dynamic programming technique.,FALSE,10
A graph is a collection of nodes connected by edges.,TRUE,8
AVL trees are guaranteed to be balanced at all times.,TRUE,4
A suffix tree requires less space compared to a suffix array for storing all the suffixes of a string.,FALSE,8
Priority queues are mainly used to implement stack data structures.,FALSE,4
Radix sort has a space complexity of O(n).,TRUE,10
Breadth-first search can be used to find the shortest path in an unweighted graph.,TRUE,8
The time complexity of binary search is O(n).,FALSE,4
A graph is a non-linear data structure.,TRUE,8
Kruskal's algorithm finds the longest path in a graph.,FALSE,4
Breadth-first search always explores vertices in ascending order of their distance from the source vertex.,FALSE,10
Huffman coding is not suitable for lossless data compression.,FALSE,8
Binary heaps are always binary search trees.,FALSE,4
Floyd-Warshall algorithm can handle graphs with negative edge weights.,TRUE,10
Quick sort is an example of a divide-and-conquer algorithm.,TRUE,8
A trie is a type of tree data structure.,TRUE,10
Kruskal's algorithm requires the graph to be connected.,FALSE,4
Dijkstra's algorithm uses breadth-first search to explore vertices.,FALSE,8
Binary search trees are always binary trees.,FALSE,4
The topological sort of a directed acyclic graph is unique.,FALSE,10
In a binary search tree; each node can have at most two children.,TRUE,8
Breadth-first search is an example of a depth-first traversal algorithm.,FALSE,4
Radix sort is more efficient than quicksort for sorting large arrays with small integer keys.,TRUE,10
The time complexity of the radix sort algorithm is O(n log n).,FALSE,8
A binary heap is a complete binary tree with the heap property.,TRUE,4
A graph with only one vertex is considered to be connected.,TRUE,10
Binary search trees can be implemented using linked lists.,TRUE,8
Depth-first search can be used to determine if a graph is bipartite.,TRUE,4
Huffman coding is used for lossy data compression.,FALSE,10
The Bellman-Ford algorithm can detect negative cycles in a graph.,TRUE,8
A trie is a data structure used for storing integers.,FALSE,4
A suffix tree requires less space compared to a suffix array.,FALSE,10
Ternary search is an example of a divide-and-conquer algorithm.,TRUE,8
Breadth-first search can be used to find the shortest path between two vertices in an unweighted graph.,TRUE,4
Depth-first search can be used to find the shortest path in a graph.,FALSE,10
Prim's algorithm can handle graphs with negative edge weights.,FALSE,8
Kruskal's algorithm requires that the graph is connected.,FALSE,4
Binary heaps are typically used to implement priority queues.,TRUE,10
A segment tree can be used to answer range queries on an array efficiently.,TRUE,8
Depth-first search can be used to generate a topological ordering of vertices in a directed acyclic graph.,TRUE,4
The time complexity of the bubble sort algorithm is O(n log n).,FALSE,10
A hash table with linear probing resolves collisions by placing the collided element in the next available slot.,FALSE,4
Quick sort has a worst-case time complexity of O(n^2).,TRUE,8
A suffix tree is a data structure used to store suffixes of a string.,TRUE,4
Fenwick trees are efficient for range sum queries and point updates in an array.,TRUE,10
A graph with only one vertex cannot have any edges.,TRUE,8
Merge sort is an in-place sorting algorithm.,FALSE,10
Dijkstra's algorithm uses breadth-first search to find the shortest path.,FALSE,8
Binary search trees can have duplicate keys in their structure.,TRUE,4
A hash table with chaining resolves collisions by placing collided elements in separate linked lists.,TRUE,10
A suffix array is a compressed representation of a suffix tree.,FALSE,8
Binary search can only be applied to arrays.,FALSE,4
Fenwick trees have a space complexity of O(n).,TRUE,10
The time complexity of heap sort is O(n log n).,TRUE,8
A trie is a tree-like data structure used for storing integers.,FALSE,10
A connected graph cannot have any bridges.,FALSE,8
A binary heap is always a complete binary tree.,TRUE,4
Floyd-Warshall algorithm finds the shortest paths between all pairs of vertices in a graph with non-negative edge weights.,TRUE,10
A suffix tree can be used to efficiently find all occurrences of a pattern in a string.,TRUE,8
Dijkstra's algorithm is an example of a dynamic programming algorithm.,FALSE,4
Quick sort is an in-place sorting algorithm.,TRUE,10
A graph with only one vertex cannot have any cycles.,TRUE,8
AVL trees are always balanced binary search trees.,TRUE,4
Radix sort is stable.,FALSE,8
Breadth-first search can be used to determine if a graph is connected.,TRUE,4
A suffix array is always more space-efficient than a suffix tree.,FALSE,10
A graph can have multiple topological orderings.,TRUE,8
Binary heaps guarantee O(log n) time complexity for insertion and deletion operations.,FALSE,4
A directed graph always has the same number of edges as vertices.,FALSE,8
Depth-first search can be used to find the shortest path between two vertices in a weighted graph.,FALSE,4
A hash table with separate chaining resolves collisions by placing collided elements in the same bucket.,TRUE,10
Prim's algorithm always finds the shortest path between two vertices in a graph.,FALSE,8
Binary heaps can be used to implement priority queues efficiently.,TRUE,4
A trie is a type of tree data structure used primarily for sorting integers.,FALSE,10
Kruskal's algorithm finds the maximum spanning tree in a graph.,FALSE,8
A segment tree can be used to perform range minimum queries efficiently.,TRUE,10
A trie is a tree-like data structure used for storing strings.,FALSE,4
In a binary search tree; the left subtree of a node contains only nodes with keys less than the node's key.,TRUE,8
A linked list is a type of linear data structure.,TRUE,4
Insertion sort has a time complexity of O(n log n).,FALSE,10
Bubble sort is an example of a divide-and-conquer algorithm.,FALSE,8
The time complexity of selection sort is O(n^2).,TRUE,4
A binary search tree can have at most two children for each node.,TRUE,10
A queue follows the First In First Out (FIFO) principle.,TRUE,8
Depth-first search always explores vertices in ascending order of their distance from the source vertex.,FALSE,4
A hash table with linear probing resolves collisions by placing collided elements in separate linked lists.,FALSE,10
A segment tree can be used to perform range sum queries efficiently.,TRUE,8
Huffman coding can be used for lossless data compression.,TRUE,4
A graph with only one vertex cannot have any bridges.,TRUE,10
Is a segment tree a tree data structure used for storing intervals or segments?,TRUE,8
Does Fenwick trees require O(n log n) time for construction?,FALSE,4
Is a hash function always produces unique hash values for different inputs?,FALSE,10
Is collision resolution necessary in hash tables to handle cases where multiple keys hash to the same index?,TRUE,8
Does a binary heap guarantee constant-time insertion and deletion of elements?,FALSE,4
Are binary search trees guaranteed to be balanced at all times?,TRUE,10
Is a suffix tree used for finding all occurrences of a pattern in a string?,TRUE,8
Is binary heaps are typically used to implement priority queues?,TRUE,4
Does Floyd-Warshall algorithm can handle graphs with negative cycles?,TRUE,10
Is a trie is a type of tree data structure used primarily for searching strings?,FALSE,8
Can Prim's algorithm always finds the shortest path between two vertices in a graph?,FALSE,4
Does a hash table with separate chaining resolves collisions by placing collided elements in the same bucket?,TRUE,10
Can a graph have multiple topological orderings?,TRUE,4
Does a segment tree can be used to perform range sum queries efficiently?,TRUE,8
Does a suffix tree can be used to efficiently find all occurrences of a pattern in a string?,TRUE,4
Is a linked list a type of linear data structure?,TRUE,10
Does the time complexity of selection sort is O(n^2)?,TRUE,8
Can a binary search tree can have at most two children for each node?,TRUE,10
Does a queue follows the First In First Out (FIFO) principle?,TRUE,8
Does depth-first search always explores vertices in ascending order of their distance from the source vertex?,FALSE,4
Is a hash table with linear probing resolves collisions by placing collided elements in separate linked lists?,FALSE,10
Can Huffman coding can be used for lossless data compression?,TRUE,8
Can a graph with only one vertex cannot have any bridges?,TRUE,4
Does a suffix array is always more space-efficient than a suffix tree?,FALSE,10
Is a binary heap is always a complete binary tree?,TRUE,8
Does a Floyd-Warshall algorithm finds the shortest paths between all pairs of vertices in a graph with non-negative edge weights?,TRUE,10
Is a suffix tree requires less space compared to a suffix array for storing all the suffixes of a string?,FALSE,8
Can Prim's algorithm can handle graphs with negative edge weights?,FALSE,4
Does a ternary search divides the search space into three parts at each step?,TRUE,10
Is a trie is a tree-like data structure used for storing integers?,FALSE,8
Can Dijkstra's algorithm uses breadth-first search to explore vertices?,FALSE,4
Does binary search trees are always binary trees?,FALSE,10
Can the topological sort of a directed acyclic graph is unique?,FALSE,8
Does a directed graph always has the same number of edges as vertices?,FALSE,4
Can depth-first search can be used to find the shortest path between two vertices in a weighted graph?,FALSE,8
Does a hash table with linear probing resolves collisions by placing the collided element in the next available slot?,FALSE,4
Is quick sort has a worst-case time complexity of O(n^2)?,TRUE,10
Can a suffix tree is a data structure used to store suffixes of a string?,TRUE,8
Does Fenwick trees are efficient for range sum queries and point updates in an array?,TRUE,4
Is a graph with only one vertex cannot have any edges?,TRUE,8
Does merge sort is an in-place sorting algorithm?,FALSE,4
Can breadth-first search can be used to find the shortest path between two vertices in an unweighted graph?,TRUE,10
Does a binary heap is a complete binary tree with the heap property?,TRUE,8
Is a graph with only one vertex is considered to be connected?,TRUE,4
Does a priority queues can be implemented using various data structures such as arrays linked lists binary heaps or balanced binary search trees?,TRUE,10
Can balanced binary search trees such as AVL trees and Red-Black trees ensure that the height of the tree remains logarithmic providing consistent performance?,TRUE,8
Does a Huffman coding ensures that no code is a prefix of another code making it uniquely decodable?,TRUE,10
Is Dijkstra's algorithm is an example of a greedy algorithm as it makes locally optimal choices at each step?,TRUE,4
Can a self-balancing binary search tree such as AVL tree or Red-Black tree ensures a worst-case time complexity of O(log n) for search insert and delete operations?,TRUE,8
Is the heapify operation in a binary heap has a time complexity of O(log n) where n is the number of elements in the heap?,TRUE,4
Can Bellman-Ford algorithm has a time complexity of O(V*E) where V is the number of vertices and E is the number of edges in the graph?,TRUE,10
Is a directed graph in-degree of a vertex represents the number of edges entering the vertex?,TRUE,8
Does in a graph the diameter is the maximum distance between any pair of vertices?,TRUE,4
Is Huffman coding can be used for lossless data compression?,TRUE,10
Can a trie be used to efficiently store and retrieve strings?,TRUE,8
Does the bubble sort algorithm have a worst-case time complexity of O(n^2)?,TRUE,4
Is a linked list a data structure where elements are stored in a sequential order?,TRUE,10
Can the topological sort of a directed acyclic graph be computed in linear time?,TRUE,8
Does a directed acyclic graph (DAG) have cycles?,FALSE,4
Can the Floyd-Warshall algorithm find the shortest paths between all pairs of vertices in a graph with negative edge weights?,TRUE,10
Is a spanning tree a subgraph that is a tree and includes all the vertices of the original graph?,TRUE,8
Can a priority queue be implemented using a heap data structure?,TRUE,4
Is a B-tree a self-balancing tree data structure that maintains sorted data and allows searches; sequential access; insertions; and deletions in logarithmic time?,TRUE,10
Does the radix sort algorithm have a worst-case time complexity of O(n * k) where n is the number of elements and k is the number of digits in the largest number?,TRUE,8
Can Kruskal's algorithm find the minimum spanning tree of a graph with negative edge weights?,TRUE,4
Is a breadth-first search (BFS) algorithm used to traverse or search tree or graph data structures?,TRUE,10
Does a hash table with chaining resolve collisions by creating a linked list at each index where collisions occur?,TRUE,8
Can the Ford-Fulkerson algorithm find the maximum flow in a flow network?,TRUE,4
Is an AVL tree a self-balancing binary search tree where the heights of the two child subtrees of any node differ by at most one?,TRUE,10
Does a disjoint-set data structure maintain a collection of disjoint sets and allows for efficient union and find operations?,TRUE,8
Can the A* search algorithm find the shortest path from a start node to a goal node in a weighted graph?,TRUE,4
Is a trie commonly used in applications where it is necessary to represent and search for a large set of strings?,TRUE,10
Does the shell sort algorithm have a worst-case time complexity of O(n^2)?,FALSE,4
Can a directed graph have cycles?,TRUE,8
Is a graph with only one vertex always connected?,TRUE,4
Does a Fibonacci heap have a worst-case time complexity of O(1) for decrease key and amortized O(1) for delete minimum operations?,TRUE,10
Can the Edmonds-Karp algorithm find the maximum flow in a flow network?,TRUE,8
Is a suffix array a sorted array of all suffixes of a given string?,TRUE,10
Does a linear search algorithm have a worst-case time complexity of O(n)?,TRUE,8
Can a directed graph with a cycle have a topological ordering?,FALSE,4
Is a trie a tree-like data structure used for storing a dynamic set of strings?,TRUE,10
Does the quicksort algorithm have a worst-case time complexity of O(n^2)?,TRUE,8
Can a hash table with open addressing resolve collisions by finding alternative slots within the same table?,TRUE,4
Is the bucket sort algorithm stable?,TRUE,10
Does the insertion sort algorithm have a worst-case time complexity of O(n^2)?,TRUE,8
Can a binary search tree have duplicate keys?,TRUE,10
Is a graph with only one vertex always a connected component?,TRUE,8
Does the Kruskal's algorithm for finding minimum spanning tree use greedy strategy?,TRUE,4
Can a heap be used to efficiently implement a priority queue?,TRUE,10
Is a red-black tree a type of self-balancing binary search tree?,TRUE,8
Does the quickselect algorithm have a worst-case time complexity of O(n^2)?,TRUE,4
Can a trie be used for approximate string matching and spell checking?,TRUE,10
Is a graph with only one vertex always a tree?,TRUE,8
Does the binary search algorithm have a worst-case time complexity of O(log n)?,TRUE,4
Can a directed acyclic graph (DAG) have multiple topological orderings?,TRUE,8
Is a heap a complete binary tree where every level; except possibly the last; is completely filled; and all nodes are as far left as possible?,TRUE,4
Does the selection sort algorithm have a worst-case time complexity of O(n^2)?,TRUE,10
Can a heap be implemented using an array?,TRUE,8
Is a trie a suitable data structure for solving problems related to prefix matching and auto-complete?,TRUE,4
Does the Floyd-Warshall algorithm handle negative cycles in a graph?,TRUE,8
Can a depth-first search (DFS) algorithm be used to detect cycles in a graph?,TRUE,4
Is a binary search tree (BST) a rooted binary tree whose internal nodes each store a key greater than all the keys in the node's left subtree and less than those in its right subtree?,TRUE,10
Can the breadth-first search algorithm be used to determine the shortest path between two vertices in an unweighted graph?,TRUE,8
Is a heap sort algorithm stable?,FALSE,4
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
